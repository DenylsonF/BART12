{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\denny\\\\Documents\\\\CSE120\\\\FromMyGitHub\\\\BART12\\\\client\\\\src\\\\Attempts\\\\1st\\\\Components\\\\GraphContainer.js\";\nimport React, { Component, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js';\nimport Table from 'react-bootstrap/Table';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/esm/Col';\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }; //console.log(this.props)\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    // console.log(this.props)\n    fetch(`http://localhost:4006/Assets/${this.props.asset}/${this.props.dept}/${this.props.meter}`).then(res => res.json()).then(data => this.setState({\n      data\n    }));\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    console.log(data);\n    var asset = [];\n    asset.push( /*#__PURE__*/_jsxDEV(Table, {\n      className: \"table table-striped\",\n      bordered: true,\n      responsive: true,\n      bg: \"dark\",\n      fluid: \"md\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        bg: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Project Id: \", data[0].a_projectid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Meter Name: \", data[0].a_metername]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        bg: \"dark\",\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Department: \", data[0].a_dept]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Meter Description: \", data[0].a_meterdesc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Units: \", data[0].a_meterunits]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        bg: \"dark\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Goal Group: \", item.a_goalgroup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this));\n    console.log(asset);\n    const Dates = [];\n    const Readings = [];\n    const Goal = [];\n    {\n      data.map(item => {\n        Dates.push(item.a_readdate);\n        Readings.push(item.a_meterreading);\n        Goal.push(item.a_goal);\n      });\n    } //console.log(Dates, Readings)\n\n    const dataSet = {\n      labels: Dates,\n      datasets: [{\n        label: 'Meter Reading',\n        data: Readings,\n        fill: true,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(0, 220, 100, .9)\",\n        borderColor: \"rgb(205, 130, 158)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgb(205, 130,1 58)\",\n        pointBackgroundColor: \"rgb(255, 255, 255)\",\n        pointBorderWidth: 10,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n        pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10\n      }, {\n        label: 'Goal',\n        data: Goal,\n        fill: true,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(0, 0, 220, .3)\",\n        borderColor: \"rgb(35, 26, 136)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgb(35, 26, 136)\",\n        pointBackgroundColor: \"rgb(255, 255, 255)\",\n        pointBorderWidth: 10,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n        pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: asset.map(item => {\n          return /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table table-striped\",\n            bordered: true,\n            responsive: true,\n            bg: \"dark\",\n            fluid: \"md\",\n            variant: \"dark\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              bg: \"dark\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: [\"Project Id: \", item.a_projectid]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [\"Meter Name: \", item.a_metername]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              bg: \"dark\",\n              variant: \"dark\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: [\"Department: \", item.a_dept]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [\"Meter Description: \", item.a_meterdesc]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [\"Units: \", item.a_meterunits]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              bg: \"dark\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [\"Goal Group: \", item.a_goalgroup]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: dataSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["C:/Users/denny/Documents/CSE120/FromMyGitHub/BART12/client/src/Attempts/1st/Components/GraphContainer.js"],"names":["React","Component","useEffect","Line","Chart","Table","Row","Col","Charts","constructor","props","state","data","componentDidMount","getData","fetch","asset","dept","meter","then","res","json","setState","render","console","log","push","a_projectid","a_metername","a_dept","a_meterdesc","a_meterunits","item","a_goalgroup","Dates","Readings","Goal","map","a_readdate","a_meterreading","a_goal","dataSet","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/esm/Col';\r\n\r\nclass Charts extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            data: []\r\n        }\r\n        //console.log(this.props)\r\n    }\r\n\r\n     componentDidMount(){\r\n        this.getData()\r\n    }\r\n\r\n     getData(){\r\n        // console.log(this.props)\r\n       fetch(`http://localhost:4006/Assets/${this.props.asset}/${this.props.dept}/${this.props.meter}`)\r\n       .then(res => res.json())\r\n       .then(data => this.setState({data}))       \r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const {data} = this.state;\r\n        console.log(data)\r\n        var asset = []\r\n        asset.push(\r\n        <Table className = 'table table-striped' bordered responsive bg = 'dark' fluid = 'md' variant = 'dark'>\r\n            <Row bg = 'dark' >\r\n                <Col>Project Id: {data[0].a_projectid}</Col>\r\n                <Col>Meter Name: {data[0].a_metername}</Col>\r\n            </Row>\r\n            <Row bg = 'dark' variant = 'dark'>\r\n                <Col>Department: {data[0].a_dept}</Col>\r\n                <Col>Meter Description: {data[0].a_meterdesc}</Col>\r\n                <Col>Units: {data[0].a_meterunits}</Col>\r\n            </Row>\r\n            <Row bg = 'dark'>\r\n                <Col>Goal Group: {item.a_goalgroup}</Col>\r\n            </Row>\r\n        </Table>\r\n    )\r\n        console.log(asset)\r\n        \r\n        \r\n        const Dates = []\r\n        const Readings = []\r\n        const Goal = []\r\n\r\n        {data.map ((item)=>{\r\n            Dates.push(item.a_readdate)\r\n            Readings.push(item.a_meterreading)\r\n            Goal.push(item.a_goal)\r\n        })}\r\n\r\n        //console.log(Dates, Readings)\r\n\r\n        const dataSet = {\r\n            labels: Dates,\r\n            datasets:[\r\n                {\r\n                    label: 'Meter Reading',\r\n                    data: Readings,\r\n                    fill: true,\r\n                    lineTension: 0.5,\r\n                    backgroundColor: \"rgba(0, 220, 100, .9)\",\r\n                    borderColor: \"rgb(205, 130, 158)\",\r\n                    borderCapStyle: \"butt\",\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: \"rgb(205, 130,1 58)\",\r\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                    pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10\r\n                },\r\n                {\r\n                    label: 'Goal',\r\n                    data: Goal,\r\n                    fill: true,\r\n                    lineTension: 0.5,\r\n                    backgroundColor: \"rgba(0, 0, 220, .3)\",\r\n                    borderColor: \"rgb(35, 26, 136)\",\r\n                    borderCapStyle: \"butt\",\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: \"rgb(35, 26, 136)\",\r\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                    pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                }\r\n\r\n            ]\r\n        };\r\n\r\n                           \r\n        \r\n        return (\r\n            <div>\r\n                <div>\r\n                    {\r\n                        asset.map ((item)=>{\r\n                            return(\r\n                                <Table className = 'table table-striped' bordered responsive bg = 'dark' fluid = 'md' variant = 'dark'>\r\n                                    <Row bg = 'dark' >\r\n                                        <Col>Project Id: {item.a_projectid}</Col>\r\n                                        <Col>Meter Name: {item.a_metername}</Col>\r\n                                    </Row>\r\n                                    <Row bg = 'dark' variant = 'dark'>\r\n                                        <Col>Department: {item.a_dept}</Col>\r\n                                        <Col>Meter Description: {item.a_meterdesc}</Col>\r\n                                        <Col>Units: {item.a_meterunits}</Col>\r\n                                    </Row>\r\n                                    <Row bg = 'dark'>\r\n                                        <Col>Goal Group: {item.a_goalgroup}</Col>\r\n                                    </Row>\r\n                                </Table>\r\n                            )\r\n                        })\r\n                    }\r\n                </div> \r\n                <div>\r\n                    <Line data = {dataSet} />\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}