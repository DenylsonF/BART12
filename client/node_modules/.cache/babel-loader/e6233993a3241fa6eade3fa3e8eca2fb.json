{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\denny\\\\Documents\\\\CSE120\\\\FromMyGitHub\\\\BART12\\\\client\\\\src\\\\Attempts\\\\1st\\\\Components\\\\GraphContainer.js\";\nimport React, { Component, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js';\nimport Table from 'react-bootstrap/Table';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/esm/Col';\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }; //console.log(this.props)\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    // console.log(this.props)\n    fetch(`http://localhost:4006/Assets/${this.props.asset}/${this.props.dept}/${this.props.meter}`).then(res => res.json()).then(data => this.setState({\n      data\n    }));\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    console.log(data[0]);\n    var asset = [];\n    asset.push(data[0]);\n    console.log(asset);\n    const Dates = [];\n    const Readings = [];\n    const Goal = [];\n    {\n      data.map(item => {\n        Dates.push(item.a_readdate);\n        Readings.push(item.a_meterreading);\n        Goal.push(item.a_goal);\n      });\n    } //console.log(Dates, Readings)\n\n    const dataSet = {\n      labels: Dates,\n      datasets: [{\n        label: 'Meter Reading',\n        data: Readings,\n        fill: true,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(0, 220, 100, .9)\",\n        borderColor: \"rgb(205, 130, 158)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgb(205, 130,1 58)\",\n        pointBackgroundColor: \"rgb(255, 255, 255)\",\n        pointBorderWidth: 10,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n        pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10\n      }, {\n        label: 'Goal',\n        data: Goal,\n        fill: true,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(0, 0, 220, .3)\",\n        borderColor: \"rgb(35, 26, 136)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgb(35, 26, 136)\",\n        pointBackgroundColor: \"rgb(255, 255, 255)\",\n        pointBorderWidth: 10,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n        pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"table table-striped\",\n          bordered: true,\n          responsive: true,\n          bg: \"dark\",\n          fluid: \"md\",\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            bg: \"dark\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [\"Project Id: \", asset.a_projectid]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [\"Meter Name: \", asset.a_metername]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            bg: \"dark\",\n            variant: \"dark\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [\"Department: \", asset.a_dept]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [\"Meter Description: \", asset.a_meterdesc]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [\"Units: \", asset.a_meterunits]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            bg: \"dark\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [\"Goal Group: \", asset.a_goalgroup]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: dataSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["C:/Users/denny/Documents/CSE120/FromMyGitHub/BART12/client/src/Attempts/1st/Components/GraphContainer.js"],"names":["React","Component","useEffect","Line","Chart","Table","Row","Col","Charts","constructor","props","state","data","componentDidMount","getData","fetch","asset","dept","meter","then","res","json","setState","render","console","log","push","Dates","Readings","Goal","map","item","a_readdate","a_meterreading","a_goal","dataSet","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","a_projectid","a_metername","a_dept","a_meterdesc","a_meterunits","a_goalgroup"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/esm/Col';\r\n\r\nclass Charts extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            data: []\r\n        }\r\n        //console.log(this.props)\r\n    }\r\n\r\n     componentDidMount(){\r\n        this.getData()\r\n    }\r\n\r\n     getData(){\r\n        // console.log(this.props)\r\n       fetch(`http://localhost:4006/Assets/${this.props.asset}/${this.props.dept}/${this.props.meter}`)\r\n       .then(res => res.json())\r\n       .then(data => this.setState({data}))       \r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const {data} = this.state;\r\n        console.log(data[0])\r\n        var asset = []\r\n        asset.push(data[0])\r\n        console.log(asset)\r\n        \r\n        \r\n        const Dates = []\r\n        const Readings = []\r\n        const Goal = []\r\n\r\n        {data.map ((item)=>{\r\n            Dates.push(item.a_readdate)\r\n            Readings.push(item.a_meterreading)\r\n            Goal.push(item.a_goal)\r\n        })}\r\n\r\n        //console.log(Dates, Readings)\r\n\r\n        const dataSet = {\r\n            labels: Dates,\r\n            datasets:[\r\n                {\r\n                    label: 'Meter Reading',\r\n                    data: Readings,\r\n                    fill: true,\r\n                    lineTension: 0.5,\r\n                    backgroundColor: \"rgba(0, 220, 100, .9)\",\r\n                    borderColor: \"rgb(205, 130, 158)\",\r\n                    borderCapStyle: \"butt\",\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: \"rgb(205, 130,1 58)\",\r\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                    pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10\r\n                },\r\n                {\r\n                    label: 'Goal',\r\n                    data: Goal,\r\n                    fill: true,\r\n                    lineTension: 0.5,\r\n                    backgroundColor: \"rgba(0, 0, 220, .3)\",\r\n                    borderColor: \"rgb(35, 26, 136)\",\r\n                    borderCapStyle: \"butt\",\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: \"rgb(35, 26, 136)\",\r\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                    pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                }\r\n\r\n            ]\r\n        };\r\n\r\n                           \r\n        \r\n        return (\r\n            <div>\r\n                <div>\r\n                        <Table className = 'table table-striped' bordered responsive bg = 'dark' fluid = 'md' variant = 'dark'>\r\n                            <Row bg = 'dark' >\r\n                                <Col>Project Id: {asset.a_projectid}</Col>\r\n                                <Col>Meter Name: {asset.a_metername}</Col>\r\n                            </Row>\r\n                            <Row bg = 'dark' variant = 'dark'>\r\n                                <Col>Department: {asset.a_dept}</Col>\r\n                                <Col>Meter Description: {asset.a_meterdesc}</Col>\r\n                                <Col>Units: {asset.a_meterunits}</Col>\r\n                            </Row>\r\n                            <Row bg = 'dark'>\r\n                                <Col>Goal Group: {asset.a_goalgroup}</Col>\r\n                            </Row>\r\n                        </Table>\r\n                </div> \r\n                <div>\r\n                    <Line data = {dataSet} />\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}