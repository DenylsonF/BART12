{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\denny\\\\Documents\\\\CSE120\\\\FromMyGitHub\\\\BART12\\\\client\\\\src\\\\Attempts\\\\1st\\\\Components\\\\GraphContainer.js\";\nimport React, { Component, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Table from 'react-bootstrap/Table';\nimport Nav from 'react-bootstrap/Nav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      single: [],\n      data: []\n    }; //console.log(this.props)\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    // console.log(this.props)\n    fetch(`http://localhost:4006/Assets/${this.props.asset}/${this.props.dept}/${this.props.meter}`).then(res => res.json()).then(result => this.setState({\n      data: result\n    }));\n    fetch(`http://localhost:4006/Assets2.0/${this.props.asset}/${this.props.dept}/${this.props.meter}`).then(res => res.json()).then(result => this.setState({\n      data: result\n    }));\n  }\n\n  render() {\n    const {\n      data\n    } = this.state.data; //console.log(data)\n\n    const Dates = [];\n    const Readings = [];\n    const Goal = [];\n    {\n      this.state.data.map(item => {\n        Dates.push(item.a_readdate);\n        Readings.push(item.a_meterreading);\n        Goal.push(item.a_goal);\n      });\n    } //console.log(Dates, Readings)\n\n    const dataSet = {\n      labels: Dates,\n      datasets: [{\n        label: 'Meter Reading',\n        data: Readings,\n        fill: true\n      }, {\n        label: 'Goal',\n        data: Goal,\n        fill: false\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/Assets',\n            className: \"nav-link\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.data.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"body\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Project Id: \", item.a_projectid]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Meter Name: \", item.a_metername]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Department: \", item.a_dept]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Meter Description: \", item.a_meterdesc]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Meter Reading: \", item.a_meterreading]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Meter Units: \", item.a_meterunits]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Read Date: \", item.a_readdate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Group: \", item.a_group]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Goal Group: \", item.a_goalgroup]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this) // <Table className = 'table table-striped' bordered responsive bg = 'dark' fluid = 'md' variant = 'dark'>\n          //     <Row bg = 'dark' >\n          //         <Col>Project Id: {item.a_projectid}</Col>\n          //         <Col>Meter Name: {item.a_metername}</Col>\n          //     </Row>\n          //     <Row bg = 'dark' variant = 'dark'>\n          //         <Col>Department: {item.a_dept}</Col>\n          //         <Col>Meter Description: {item.a_meterdesc}</Col>\n          //         <Col>Units: {item.a_meterunits}</Col>\n          //     </Row>\n          //     <Row bg = 'dark'>\n          //         <Col>Goal Group: {item.a_goalgroup}</Col>\n          //     </Row>\n          // </Table>\n          ;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: dataSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        class: \"navbar fixed-bottom\",\n        expand: \"lg\",\n        sticky: \"bottom\",\n        bg: \"dark\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["C:/Users/denny/Documents/CSE120/FromMyGitHub/BART12/client/src/Attempts/1st/Components/GraphContainer.js"],"names":["React","Component","useEffect","Link","Line","Chart","Navbar","Table","Nav","Charts","constructor","props","state","single","data","componentDidMount","getData","fetch","asset","dept","meter","then","res","json","result","setState","render","Dates","Readings","Goal","map","item","push","a_readdate","a_meterreading","a_goal","dataSet","labels","datasets","label","fill","a_projectid","a_metername","a_dept","a_meterdesc","a_meterunits","a_group","a_goalgroup"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass Charts extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            single: [], \r\n            data: []\r\n        }\r\n        //console.log(this.props)\r\n    }\r\n\r\n     componentDidMount(){\r\n        this.getData()\r\n    }\r\n\r\n     getData(){\r\n        // console.log(this.props)\r\n       fetch(`http://localhost:4006/Assets/${this.props.asset}/${this.props.dept}/${this.props.meter}`)\r\n       .then(res => res.json())\r\n       .then(result => this.setState({data: result}))\r\n       \r\n       fetch(`http://localhost:4006/Assets2.0/${this.props.asset}/${this.props.dept}/${this.props.meter}`)\r\n       .then(res => res.json())\r\n       .then(result => this.setState({data: result}))        \r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const {data} = this.state.data;\r\n        //console.log(data)\r\n        \r\n        const Dates = []\r\n        const Readings = []\r\n        const Goal = []\r\n\r\n        {this.state.data.map ((item)=>{\r\n            Dates.push(item.a_readdate)\r\n            Readings.push(item.a_meterreading)\r\n            Goal.push(item.a_goal)\r\n        })}\r\n\r\n        //console.log(Dates, Readings)\r\n\r\n        const dataSet = {\r\n            labels: Dates,\r\n            datasets:[\r\n                {\r\n                    label: 'Meter Reading',\r\n                    data: Readings,\r\n                    fill: true,                    \r\n                },\r\n                {\r\n                    label: 'Goal',\r\n                    data: Goal,\r\n                    fill: false,\r\n                }\r\n\r\n            ]\r\n        };\r\n        \r\n        \r\n        return (\r\n            <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Nav.Link >\r\n                <Link to = {'/Assets'} className = 'nav-link'>Back</Link>\r\n                </Nav.Link>\r\n            </Navbar>\r\n                <div>\r\n                {this.state.data.map ((item)=>{\r\n                         return(\r\n                            <body>\r\n                            <p>Project Id: {item.a_projectid}</p>\r\n                            <p>Meter Name: {item.a_metername}</p>\r\n                            <p>Department: {item.a_dept}</p>\r\n                            <p>Meter Description: {item.a_meterdesc}</p>\r\n                            <p>Meter Reading: {item.a_meterreading}</p>\r\n                            <p>Meter Units: {item.a_meterunits}</p>\r\n                            <p>Read Date: {item.a_readdate}</p>\r\n                            <p>Group: {item.a_group}</p>\r\n                            <p>Goal Group: {item.a_goalgroup}</p>\r\n                        </body>\r\n            \r\n                            // <Table className = 'table table-striped' bordered responsive bg = 'dark' fluid = 'md' variant = 'dark'>\r\n                            //     <Row bg = 'dark' >\r\n                            //         <Col>Project Id: {item.a_projectid}</Col>\r\n                            //         <Col>Meter Name: {item.a_metername}</Col>\r\n                            //     </Row>\r\n                            //     <Row bg = 'dark' variant = 'dark'>\r\n                            //         <Col>Department: {item.a_dept}</Col>\r\n                            //         <Col>Meter Description: {item.a_meterdesc}</Col>\r\n                            //         <Col>Units: {item.a_meterunits}</Col>\r\n                            //     </Row>\r\n                            //     <Row bg = 'dark'>\r\n                            //         <Col>Goal Group: {item.a_goalgroup}</Col>\r\n                            //     </Row>\r\n                            // </Table>\r\n                 ) })}\r\n\r\n                </div> \r\n                <div>\r\n                    <Line data = {dataSet} />\r\n                </div>\r\n                <Navbar class = \"navbar fixed-bottom\" expand = 'lg' sticky = 'bottom' bg = 'dark'>\r\n                    <p></p>\r\n                </Navbar>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}