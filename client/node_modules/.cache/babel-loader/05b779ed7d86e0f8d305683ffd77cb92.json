{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\denny\\\\Documents\\\\CSE120\\\\FromMyGitHub\\\\BART12\\\\client\\\\src\\\\Attempts\\\\1st\\\\Components\\\\GraphContainer.js\";\nimport React, { Component, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/esm/Col';\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }; //console.log(this.props)\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    // console.log(this.props)\n    fetch(`http://localhost:4006/Assets/${this.props.asset}/${this.props.dept}/${this.props.meter}`).then(res => res.json()).then(data => this.setState({\n      data\n    }));\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    console.log(data);\n    const Dates = [];\n    const Readings = [];\n    const Goal = [];\n    {\n      data.map(item => {\n        Dates.push(item.a_readdate);\n        Readings.push(item.a_meterreading);\n        Goal.push(item.a_goal);\n      });\n    } //console.log(Dates, Readings)\n\n    const dataSet = {\n      labels: Dates,\n      datasets: [{\n        label: 'Meter Reading',\n        data: Readings,\n        fill: true\n      }, {\n        label: 'Goal',\n        data: Goal,\n        fill: false\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.data.map(item => {\n          return /*#__PURE__*/_jsxDEV(Container, {\n            fluid: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: [\"Project Id: \", item.a_projectid]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [\"Meter Name: \", item.a_metername]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: dataSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["C:/Users/denny/Documents/CSE120/FromMyGitHub/BART12/client/src/Attempts/1st/Components/GraphContainer.js"],"names":["React","Component","useEffect","Line","Chart","Table","Container","Row","Col","Charts","constructor","props","state","data","componentDidMount","getData","fetch","asset","dept","meter","then","res","json","setState","render","console","log","Dates","Readings","Goal","map","item","push","a_readdate","a_meterreading","a_goal","dataSet","labels","datasets","label","fill","a_projectid","a_metername"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport Container  from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/esm/Col';\r\n\r\nclass Charts extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            data: []\r\n        }\r\n        //console.log(this.props)\r\n    }\r\n\r\n     componentDidMount(){\r\n        this.getData()\r\n    }\r\n\r\n     getData(){\r\n        // console.log(this.props)\r\n       fetch(`http://localhost:4006/Assets/${this.props.asset}/${this.props.dept}/${this.props.meter}`)\r\n       .then(res => res.json())\r\n       .then(data => this.setState({data}))       \r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const {data} = this.state;\r\n        console.log(data)\r\n        \r\n        const Dates = []\r\n        const Readings = []\r\n        const Goal = []\r\n\r\n        {data.map ((item)=>{\r\n            Dates.push(item.a_readdate)\r\n            Readings.push(item.a_meterreading)\r\n            Goal.push(item.a_goal)\r\n        })}\r\n\r\n        //console.log(Dates, Readings)\r\n\r\n        const dataSet = {\r\n            labels: Dates,\r\n            datasets:[\r\n                {\r\n                    label: 'Meter Reading',\r\n                    data: Readings,\r\n                    fill: true,                    \r\n                },\r\n                {\r\n                    label: 'Goal',\r\n                    data: Goal,\r\n                    fill: false,\r\n                }\r\n\r\n            ]\r\n        };\r\n\r\n                           \r\n        \r\n        return (\r\n            <div>\r\n                <div>\r\n                {this.state.data.map ((item)=>{\r\n                    return(\r\n                    <Container fluid = 'md'>\r\n                        <Row >\r\n                            <Col>Project Id: {item.a_projectid}</Col>\r\n                            <Col>Meter Name: {item.a_metername}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            \r\n                        </Row>\r\n                    </Container>\r\n                 ) })}\r\n                </div> \r\n                <div>\r\n                    <Line data = {dataSet} />\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}