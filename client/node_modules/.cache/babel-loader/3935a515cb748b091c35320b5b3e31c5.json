{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\denny\\\\Documents\\\\CSE120\\\\FromMyGitHub\\\\BART12\\\\client\\\\src\\\\Attempts\\\\1st\\\\Components\\\\notifications.js\";\nimport React, { Component } from 'react'; //import {Link} from \"react-router-dom\";\n\nimport '../styles.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from 'moment';\nimport Table from 'react-bootstrap/Table';\n\nconst ProjNotifications = item => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: item.projectNotifs.projID\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: item.projectNotifs.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: item.projectNotifs.phase\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: item.projectNotifs.time_at\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this);\n\n_c = ProjNotifications;\n\nclass NotifTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getNotifs = () => {\n      var date = moment().utcOffset('0').format('YYYY-MM-DD');\n      console.log(date);\n      fetch(`http://localhost:4006/projNotification/${date}/${this.state.type}`).then(res => res.json()).then(projectNotifs => this.setState({\n        projectNotifs\n      })).catch(err => console.log(err));\n    };\n\n    this.state = {\n      type: '',\n      //specifiy notification type [danger, info, etc]\n      projectNotifs: []\n    };\n  } //once compnent mounts data is pulled from DB\n\n\n  componentDidMount() {\n    this.getNotifs();\n  }\n\n  NotifList() {\n    return this.state.projectNotifs.map((curr, index) => {\n      return /*#__PURE__*/_jsxDEV(ProjNotifications, {\n        projectNotifs: curr\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    });\n  } //should just fetch from DB\n\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Updated At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.NotifList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NotifTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjNotifications\");","map":{"version":3,"sources":["C:/Users/denny/Documents/CSE120/FromMyGitHub/BART12/client/src/Attempts/1st/Components/notifications.js"],"names":["React","Component","moment","Table","ProjNotifications","item","projectNotifs","projID","name","phase","time_at","NotifTable","constructor","props","getNotifs","date","utcOffset","format","console","log","fetch","state","type","then","res","json","setState","catch","err","componentDidMount","NotifList","map","curr","index","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,eAAP;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAIA,MAAMC,iBAAiB,GAAGC,IAAI,iBAC1B;AAAA,0BACI;AAAA,cAAKA,IAAI,CAACC,aAAL,CAAmBC;AAAxB;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA,cAAKF,IAAI,CAACC,aAAL,CAAmBE;AAAxB;AAAA;AAAA;AAAA;AAAA,UAFJ,eAGI;AAAA,cAAKH,IAAI,CAACC,aAAL,CAAmBG;AAAxB;AAAA;AAAA;AAAA;AAAA,UAHJ,eAII;AAAA,cAAKJ,IAAI,CAACC,aAAL,CAAmBI;AAAxB;AAAA;AAAA;AAAA;AAAA,UAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMN,iB;;AASN,MAAMO,UAAN,SAAyBV,SAAzB,CAAkC;AAE/BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoBjBC,SApBiB,GAoBL,MAAM;AAEd,UAAIC,IAAI,GAAGb,MAAM,GAAGc,SAAT,CAAmB,GAAnB,EAAwBC,MAAxB,CAA+B,YAA/B,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEAK,MAAAA,KAAK,CAAE,0CAAyCL,IAAK,IAAG,KAAKM,KAAL,CAAWC,IAAK,EAAnE,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUjB,aAAa,IAAI,KAAKoB,QAAL,CAAc;AAACpB,QAAAA;AAAD,OAAd,CAF3B,EAGKqB,KAHL,CAGWC,GAAG,IAAIV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAHlB;AAIH,KA7BgB;;AAEd,SAAKP,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAG,EADK;AACM;AAClBhB,MAAAA,aAAa,EAAG;AAFJ,KAAb;AAIH,GAR8B,CAU9B;;;AACAuB,EAAAA,iBAAiB,GAAE;AACf,SAAKf,SAAL;AACH;;AAEDgB,EAAAA,SAAS,GAAE;AACP,WAAO,KAAKT,KAAL,CAAWf,aAAX,CAAyByB,GAAzB,CAA6B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjD,0BAAO,QAAC,iBAAD;AAAmB,QAAA,aAAa,EAAID;AAApC,SAAiDC,KAAjD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH,GAnB6B,CAqB9B;;;AAcAC,EAAAA,MAAM,GAAE;AACJhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AAEA,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,kBACC,KAAKS,SAAL;AADD;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAtD6B;;AAyDlC,eAAenB,UAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import {Link} from \"react-router-dom\";\r\nimport '../styles.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport moment from 'moment'\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\n\r\nconst ProjNotifications = item => (\r\n    <tr>\r\n        <td>{item.projectNotifs.projID}</td>\r\n        <td>{item.projectNotifs.name}</td>\r\n        <td>{item.projectNotifs.phase}</td>\r\n        <td>{item.projectNotifs.time_at}</td>\r\n    </tr>\r\n)\r\n\r\nclass NotifTable extends Component{\r\n    \r\n   constructor(props){\r\n       super(props);\r\n       this.state = {  \r\n        type : '',        //specifiy notification type [danger, info, etc]\r\n        projectNotifs : []\r\n    }\r\n   }\r\n\r\n    //once compnent mounts data is pulled from DB\r\n    componentDidMount(){\r\n        this.getNotifs();\r\n    }\r\n\r\n    NotifList(){\r\n        return this.state.projectNotifs.map((curr, index) => {\r\n            return <ProjNotifications projectNotifs = {curr} key = {index} />\r\n        });\r\n    }\r\n\r\n    //should just fetch from DB\r\n    getNotifs = () => {\r\n\r\n        var date = moment().utcOffset('0').format('YYYY-MM-DD');\r\n        console.log(date)\r\n\r\n        fetch(`http://localhost:4006/projNotification/${date}/${this.state.type}`)\r\n            .then(res => res.json())\r\n            .then(projectNotifs => this.setState({projectNotifs}))\r\n            .catch(err => console.log(err))\r\n    } \r\n\r\n\r\n\r\n    render(){\r\n        console.log(this.state)\r\n\r\n        return(\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Project ID</th>\r\n                        <th>Name</th>\r\n                        <th>Phase</th>\r\n                        <th>Updated At</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.NotifList()}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default NotifTable;\r\n"]},"metadata":{},"sourceType":"module"}